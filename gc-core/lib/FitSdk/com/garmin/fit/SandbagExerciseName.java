/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


package com.garmin.fit;

import java.util.HashMap;
import java.util.Map;

public class SandbagExerciseName  {
    public static final int AROUND_THE_WORLD = 0;
    public static final int BACK_SQUAT = 1;
    public static final int BEAR_CRAWL_PULL_THROUGH = 2;
    public static final int BEAR_HUG_SQUAT = 3;
    public static final int CLEAN = 4;
    public static final int CLEAN_AND_PRESS = 5;
    public static final int CURL = 6;
    public static final int FRONT_CARRY = 7;
    public static final int FRONT_SQUAT = 8;
    public static final int LUNGE = 9;
    public static final int OVERHEAD_PRESS = 10;
    public static final int PLANK_PULL_THROUGH = 11;
    public static final int ROTATIONAL_LUNGE = 12;
    public static final int ROW = 13;
    public static final int RUSSIAN_TWIST = 14;
    public static final int SHOULDERING = 15;
    public static final int SHOVELING = 16;
    public static final int SIDE_LUNGE = 17;
    public static final int SPRINT = 18;
    public static final int ZERCHER_SQUAT = 19;
    public static final int INVALID = Fit.UINT16_INVALID;

    private static final Map<Integer, String> stringMap;

    static {
        stringMap = new HashMap<Integer, String>();
        stringMap.put(AROUND_THE_WORLD, "AROUND_THE_WORLD");
        stringMap.put(BACK_SQUAT, "BACK_SQUAT");
        stringMap.put(BEAR_CRAWL_PULL_THROUGH, "BEAR_CRAWL_PULL_THROUGH");
        stringMap.put(BEAR_HUG_SQUAT, "BEAR_HUG_SQUAT");
        stringMap.put(CLEAN, "CLEAN");
        stringMap.put(CLEAN_AND_PRESS, "CLEAN_AND_PRESS");
        stringMap.put(CURL, "CURL");
        stringMap.put(FRONT_CARRY, "FRONT_CARRY");
        stringMap.put(FRONT_SQUAT, "FRONT_SQUAT");
        stringMap.put(LUNGE, "LUNGE");
        stringMap.put(OVERHEAD_PRESS, "OVERHEAD_PRESS");
        stringMap.put(PLANK_PULL_THROUGH, "PLANK_PULL_THROUGH");
        stringMap.put(ROTATIONAL_LUNGE, "ROTATIONAL_LUNGE");
        stringMap.put(ROW, "ROW");
        stringMap.put(RUSSIAN_TWIST, "RUSSIAN_TWIST");
        stringMap.put(SHOULDERING, "SHOULDERING");
        stringMap.put(SHOVELING, "SHOVELING");
        stringMap.put(SIDE_LUNGE, "SIDE_LUNGE");
        stringMap.put(SPRINT, "SPRINT");
        stringMap.put(ZERCHER_SQUAT, "ZERCHER_SQUAT");
    }


    /**
     * Retrieves the String Representation of the Value
     * @param value The enum constant
     * @return The name of this enum contsant
     */
    public static String getStringFromValue( Integer value ) {
        if( stringMap.containsKey( value ) ) {
            return stringMap.get( value );
        }

        return "";
    }

    /**
     * Returns the enum constant with the specified name.
     * @param value The enum string value
     * @return The enum constant or INVALID if unknown
     */
    public static Integer getValueFromString( String value ) {
        for( Map.Entry<Integer, String> entry : stringMap.entrySet() ) {
            if( entry.getValue().equals( value ) ) {
                return entry.getKey();
            }
        }

        return INVALID;
    }

}
