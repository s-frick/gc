/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


package com.garmin.fit;

import java.util.HashMap;
import java.util.Map;

public class ExerciseCategory  {
    public static final int BENCH_PRESS = 0;
    public static final int CALF_RAISE = 1;
    public static final int CARDIO = 2;
    public static final int CARRY = 3;
    public static final int CHOP = 4;
    public static final int CORE = 5;
    public static final int CRUNCH = 6;
    public static final int CURL = 7;
    public static final int DEADLIFT = 8;
    public static final int FLYE = 9;
    public static final int HIP_RAISE = 10;
    public static final int HIP_STABILITY = 11;
    public static final int HIP_SWING = 12;
    public static final int HYPEREXTENSION = 13;
    public static final int LATERAL_RAISE = 14;
    public static final int LEG_CURL = 15;
    public static final int LEG_RAISE = 16;
    public static final int LUNGE = 17;
    public static final int OLYMPIC_LIFT = 18;
    public static final int PLANK = 19;
    public static final int PLYO = 20;
    public static final int PULL_UP = 21;
    public static final int PUSH_UP = 22;
    public static final int ROW = 23;
    public static final int SHOULDER_PRESS = 24;
    public static final int SHOULDER_STABILITY = 25;
    public static final int SHRUG = 26;
    public static final int SIT_UP = 27;
    public static final int SQUAT = 28;
    public static final int TOTAL_BODY = 29;
    public static final int TRICEPS_EXTENSION = 30;
    public static final int WARM_UP = 31;
    public static final int RUN = 32;
    public static final int BIKE = 33;
    public static final int CARDIO_SENSORS = 34; // Exercises within workouts that use GPS/sensors rather than rep counting
    public static final int MOVE = 35;
    public static final int POSE = 36;
    public static final int BANDED_EXERCISES = 37;
    public static final int BATTLE_ROPE = 38;
    public static final int ELLIPTICAL = 39;
    public static final int FLOOR_CLIMB = 40;
    public static final int INDOOR_BIKE = 41;
    public static final int INDOOR_ROW = 42;
    public static final int LADDER = 43;
    public static final int SANDBAG = 44;
    public static final int SLED = 45;
    public static final int SLEDGE_HAMMER = 46;
    public static final int STAIR_STEPPER = 47;
    public static final int SUSPENSION = 49;
    public static final int TIRE = 50;
    public static final int RUN_INDOOR = 52;
    public static final int BIKE_OUTDOOR = 53;
    public static final int UNKNOWN = 65534;
    public static final int INVALID = Fit.UINT16_INVALID;

    private static final Map<Integer, String> stringMap;

    static {
        stringMap = new HashMap<Integer, String>();
        stringMap.put(BENCH_PRESS, "BENCH_PRESS");
        stringMap.put(CALF_RAISE, "CALF_RAISE");
        stringMap.put(CARDIO, "CARDIO");
        stringMap.put(CARRY, "CARRY");
        stringMap.put(CHOP, "CHOP");
        stringMap.put(CORE, "CORE");
        stringMap.put(CRUNCH, "CRUNCH");
        stringMap.put(CURL, "CURL");
        stringMap.put(DEADLIFT, "DEADLIFT");
        stringMap.put(FLYE, "FLYE");
        stringMap.put(HIP_RAISE, "HIP_RAISE");
        stringMap.put(HIP_STABILITY, "HIP_STABILITY");
        stringMap.put(HIP_SWING, "HIP_SWING");
        stringMap.put(HYPEREXTENSION, "HYPEREXTENSION");
        stringMap.put(LATERAL_RAISE, "LATERAL_RAISE");
        stringMap.put(LEG_CURL, "LEG_CURL");
        stringMap.put(LEG_RAISE, "LEG_RAISE");
        stringMap.put(LUNGE, "LUNGE");
        stringMap.put(OLYMPIC_LIFT, "OLYMPIC_LIFT");
        stringMap.put(PLANK, "PLANK");
        stringMap.put(PLYO, "PLYO");
        stringMap.put(PULL_UP, "PULL_UP");
        stringMap.put(PUSH_UP, "PUSH_UP");
        stringMap.put(ROW, "ROW");
        stringMap.put(SHOULDER_PRESS, "SHOULDER_PRESS");
        stringMap.put(SHOULDER_STABILITY, "SHOULDER_STABILITY");
        stringMap.put(SHRUG, "SHRUG");
        stringMap.put(SIT_UP, "SIT_UP");
        stringMap.put(SQUAT, "SQUAT");
        stringMap.put(TOTAL_BODY, "TOTAL_BODY");
        stringMap.put(TRICEPS_EXTENSION, "TRICEPS_EXTENSION");
        stringMap.put(WARM_UP, "WARM_UP");
        stringMap.put(RUN, "RUN");
        stringMap.put(BIKE, "BIKE");
        stringMap.put(CARDIO_SENSORS, "CARDIO_SENSORS");
        stringMap.put(MOVE, "MOVE");
        stringMap.put(POSE, "POSE");
        stringMap.put(BANDED_EXERCISES, "BANDED_EXERCISES");
        stringMap.put(BATTLE_ROPE, "BATTLE_ROPE");
        stringMap.put(ELLIPTICAL, "ELLIPTICAL");
        stringMap.put(FLOOR_CLIMB, "FLOOR_CLIMB");
        stringMap.put(INDOOR_BIKE, "INDOOR_BIKE");
        stringMap.put(INDOOR_ROW, "INDOOR_ROW");
        stringMap.put(LADDER, "LADDER");
        stringMap.put(SANDBAG, "SANDBAG");
        stringMap.put(SLED, "SLED");
        stringMap.put(SLEDGE_HAMMER, "SLEDGE_HAMMER");
        stringMap.put(STAIR_STEPPER, "STAIR_STEPPER");
        stringMap.put(SUSPENSION, "SUSPENSION");
        stringMap.put(TIRE, "TIRE");
        stringMap.put(RUN_INDOOR, "RUN_INDOOR");
        stringMap.put(BIKE_OUTDOOR, "BIKE_OUTDOOR");
        stringMap.put(UNKNOWN, "UNKNOWN");
    }


    /**
     * Retrieves the String Representation of the Value
     * @param value The enum constant
     * @return The name of this enum contsant
     */
    public static String getStringFromValue( Integer value ) {
        if( stringMap.containsKey( value ) ) {
            return stringMap.get( value );
        }

        return "";
    }

    /**
     * Returns the enum constant with the specified name.
     * @param value The enum string value
     * @return The enum constant or INVALID if unknown
     */
    public static Integer getValueFromString( String value ) {
        for( Map.Entry<Integer, String> entry : stringMap.entrySet() ) {
            if( entry.getValue().equals( value ) ) {
                return entry.getKey();
            }
        }

        return INVALID;
    }

}
