/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2025 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.171.0Release
// Tag = production/release/21.171.0-0-g57fed75
/////////////////////////////////////////////////////////////////////////////////////////////


package com.garmin.fit;

import java.util.HashMap;
import java.util.Map;

public class MoveExerciseName  {
    public static final int ARCH_AND_CURL = 0;
    public static final int ARM_CIRCLES_WITH_BALL_BAND_AND_WEIGHT = 1;
    public static final int ARM_STRETCH = 2;
    public static final int BACK_MASSAGE = 3;
    public static final int BELLY_BREATHING = 4;
    public static final int BRIDGE_WITH_BALL = 5;
    public static final int DIAMOND_LEG_CRUNCH = 6;
    public static final int DIAMOND_LEG_LIFT = 7;
    public static final int EIGHT_POINT_SHOULDER_OPENER = 8;
    public static final int FOOT_ROLLING = 9;
    public static final int FOOTWORK = 10;
    public static final int FOOTWORK_ON_DISC = 11;
    public static final int FORWARD_FOLD = 12;
    public static final int FROG_WITH_BAND = 13;
    public static final int HALF_ROLL_UP = 14;
    public static final int HAMSTRING_CURL = 15;
    public static final int HAMSTRING_STRETCH = 16;
    public static final int HIP_STRETCH = 17;
    public static final int HUG_A_TREE_WITH_BALL_BAND_AND_WEIGHT = 18;
    public static final int KNEE_CIRCLES = 19;
    public static final int KNEE_FOLDS_ON_DISC = 20;
    public static final int LATERAL_FLEXION = 21;
    public static final int LEG_STRETCH_WITH_BAND = 22;
    public static final int LEG_STRETCH_WITH_LEG_CIRCLES = 23;
    public static final int LOWER_LIFT_ON_DISC = 24;
    public static final int LUNGE_SQUAT = 25;
    public static final int LUNGES_WITH_KNEE_LIFT = 26;
    public static final int MERMAID_STRETCH = 27;
    public static final int NEUTRAL_PELVIC_POSITION = 28;
    public static final int PELVIC_CLOCKS_ON_DISC = 29;
    public static final int PILATES_PLIE_SQUATS_PARALLEL_TURNED_OUT_FLAT_AND_HEELS_WITH_CHAIR = 30;
    public static final int PIRIFORMIS_STRETCH = 31;
    public static final int PLANK_KNEE_CROSSES = 32;
    public static final int PLANK_KNEE_PULLS = 33;
    public static final int PLANK_UP_DOWNS = 34;
    public static final int PRAYER_MUDRA = 35;
    public static final int PSOAS_LUNGE_STRETCH = 36;
    public static final int RIBCAGE_BREATHING = 37;
    public static final int ROLL_DOWN = 38;
    public static final int ROLL_UP_WITH_WEIGHT_AND_BAND = 39;
    public static final int SAW = 40;
    public static final int SCAPULAR_STABILIZATION = 41;
    public static final int SCISSORS_ON_DISC = 42;
    public static final int SEATED_HIP_STRETCHUP = 43;
    public static final int SEATED_TWIST = 44;
    public static final int SHAVING_THE_HEAD_WITH_BALL_BAND_AND_WEIGHT = 45;
    public static final int SPINAL_TWIST = 46;
    public static final int SPINAL_TWIST_STRETCH = 47;
    public static final int SPINE_STRETCH_FORWARD = 48;
    public static final int SQUAT_OPEN_ARM_TWIST_POSE = 49;
    public static final int SQUATS_WITH_BALL = 50;
    public static final int STAND_AND_HANG = 51;
    public static final int STANDING_SIDE_STRETCH = 52;
    public static final int STANDING_SINGLE_LEG_FORWARD_BEND_WITH_IT_BAND_OPENER = 53;
    public static final int STRAIGHT_LEG_CRUNCH_WITH_LEG_LIFT = 54;
    public static final int STRAIGHT_LEG_CRUNCH_WITH_LEG_LIFT_WITH_BALL = 55;
    public static final int STRAIGHT_LEG_CRUNCH_WITH_LEGS_CROSSED = 56;
    public static final int STRAIGHT_LEG_CRUNCH_WITH_LEGS_CROSSED_WITH_BALL = 57;
    public static final int STRAIGHT_LEG_DIAGONAL_CRUNCH = 58;
    public static final int STRAIGHT_LEG_DIAGONAL_CRUNCH_WITH_BALL = 59;
    public static final int TAILBONE_CURL = 60;
    public static final int THROAT_LOCK = 61;
    public static final int TICK_TOCK_SIDE_ROLL = 62;
    public static final int TWIST = 63;
    public static final int V_LEG_CRUNCHES = 64;
    public static final int V_SIT = 65;
    public static final int FORWARD_FOLD_WHEELCHAIR = 66;
    public static final int FORWARD_FOLD_PLUS_WHEELCHAIR = 67;
    public static final int ARM_CIRCLES_LOW_FORWARD_WHEELCHAIR = 68;
    public static final int ARM_CIRCLES_MID_FORWARD_WHEELCHAIR = 69;
    public static final int ARM_CIRCLES_HIGH_FORWARD_WHEELCHAIR = 70;
    public static final int ARM_CIRCLES_LOW_BACKWARD_WHEELCHAIR = 71;
    public static final int ARM_CIRCLES_MID_BACKWARD_WHEELCHAIR = 72;
    public static final int ARM_CIRCLES_HIGH_BACKWARD_WHEELCHAIR = 73;
    public static final int CORE_TWISTS_WHEELCHAIR = 74;
    public static final int ARM_RAISE_WHEELCHAIR = 75;
    public static final int CHEST_EXPAND_WHEELCHAIR = 76;
    public static final int ARM_EXTEND_WHEELCHAIR = 77;
    public static final int FORWARD_BEND_WHEELCHAIR = 78;
    public static final int TOE_TOUCH_WHEELCHAIR = 79;
    public static final int EXTENDED_TOE_TOUCH_WHEELCHAIR = 80;
    public static final int SEATED_ARM_CIRCLES = 81;
    public static final int TRUNK_ROTATIONS = 82;
    public static final int SEATED_TRUNK_ROTATIONS = 83;
    public static final int TOE_TOUCH = 84;
    public static final int INVALID = Fit.UINT16_INVALID;

    private static final Map<Integer, String> stringMap;

    static {
        stringMap = new HashMap<Integer, String>();
        stringMap.put(ARCH_AND_CURL, "ARCH_AND_CURL");
        stringMap.put(ARM_CIRCLES_WITH_BALL_BAND_AND_WEIGHT, "ARM_CIRCLES_WITH_BALL_BAND_AND_WEIGHT");
        stringMap.put(ARM_STRETCH, "ARM_STRETCH");
        stringMap.put(BACK_MASSAGE, "BACK_MASSAGE");
        stringMap.put(BELLY_BREATHING, "BELLY_BREATHING");
        stringMap.put(BRIDGE_WITH_BALL, "BRIDGE_WITH_BALL");
        stringMap.put(DIAMOND_LEG_CRUNCH, "DIAMOND_LEG_CRUNCH");
        stringMap.put(DIAMOND_LEG_LIFT, "DIAMOND_LEG_LIFT");
        stringMap.put(EIGHT_POINT_SHOULDER_OPENER, "EIGHT_POINT_SHOULDER_OPENER");
        stringMap.put(FOOT_ROLLING, "FOOT_ROLLING");
        stringMap.put(FOOTWORK, "FOOTWORK");
        stringMap.put(FOOTWORK_ON_DISC, "FOOTWORK_ON_DISC");
        stringMap.put(FORWARD_FOLD, "FORWARD_FOLD");
        stringMap.put(FROG_WITH_BAND, "FROG_WITH_BAND");
        stringMap.put(HALF_ROLL_UP, "HALF_ROLL_UP");
        stringMap.put(HAMSTRING_CURL, "HAMSTRING_CURL");
        stringMap.put(HAMSTRING_STRETCH, "HAMSTRING_STRETCH");
        stringMap.put(HIP_STRETCH, "HIP_STRETCH");
        stringMap.put(HUG_A_TREE_WITH_BALL_BAND_AND_WEIGHT, "HUG_A_TREE_WITH_BALL_BAND_AND_WEIGHT");
        stringMap.put(KNEE_CIRCLES, "KNEE_CIRCLES");
        stringMap.put(KNEE_FOLDS_ON_DISC, "KNEE_FOLDS_ON_DISC");
        stringMap.put(LATERAL_FLEXION, "LATERAL_FLEXION");
        stringMap.put(LEG_STRETCH_WITH_BAND, "LEG_STRETCH_WITH_BAND");
        stringMap.put(LEG_STRETCH_WITH_LEG_CIRCLES, "LEG_STRETCH_WITH_LEG_CIRCLES");
        stringMap.put(LOWER_LIFT_ON_DISC, "LOWER_LIFT_ON_DISC");
        stringMap.put(LUNGE_SQUAT, "LUNGE_SQUAT");
        stringMap.put(LUNGES_WITH_KNEE_LIFT, "LUNGES_WITH_KNEE_LIFT");
        stringMap.put(MERMAID_STRETCH, "MERMAID_STRETCH");
        stringMap.put(NEUTRAL_PELVIC_POSITION, "NEUTRAL_PELVIC_POSITION");
        stringMap.put(PELVIC_CLOCKS_ON_DISC, "PELVIC_CLOCKS_ON_DISC");
        stringMap.put(PILATES_PLIE_SQUATS_PARALLEL_TURNED_OUT_FLAT_AND_HEELS_WITH_CHAIR, "PILATES_PLIE_SQUATS_PARALLEL_TURNED_OUT_FLAT_AND_HEELS_WITH_CHAIR");
        stringMap.put(PIRIFORMIS_STRETCH, "PIRIFORMIS_STRETCH");
        stringMap.put(PLANK_KNEE_CROSSES, "PLANK_KNEE_CROSSES");
        stringMap.put(PLANK_KNEE_PULLS, "PLANK_KNEE_PULLS");
        stringMap.put(PLANK_UP_DOWNS, "PLANK_UP_DOWNS");
        stringMap.put(PRAYER_MUDRA, "PRAYER_MUDRA");
        stringMap.put(PSOAS_LUNGE_STRETCH, "PSOAS_LUNGE_STRETCH");
        stringMap.put(RIBCAGE_BREATHING, "RIBCAGE_BREATHING");
        stringMap.put(ROLL_DOWN, "ROLL_DOWN");
        stringMap.put(ROLL_UP_WITH_WEIGHT_AND_BAND, "ROLL_UP_WITH_WEIGHT_AND_BAND");
        stringMap.put(SAW, "SAW");
        stringMap.put(SCAPULAR_STABILIZATION, "SCAPULAR_STABILIZATION");
        stringMap.put(SCISSORS_ON_DISC, "SCISSORS_ON_DISC");
        stringMap.put(SEATED_HIP_STRETCHUP, "SEATED_HIP_STRETCHUP");
        stringMap.put(SEATED_TWIST, "SEATED_TWIST");
        stringMap.put(SHAVING_THE_HEAD_WITH_BALL_BAND_AND_WEIGHT, "SHAVING_THE_HEAD_WITH_BALL_BAND_AND_WEIGHT");
        stringMap.put(SPINAL_TWIST, "SPINAL_TWIST");
        stringMap.put(SPINAL_TWIST_STRETCH, "SPINAL_TWIST_STRETCH");
        stringMap.put(SPINE_STRETCH_FORWARD, "SPINE_STRETCH_FORWARD");
        stringMap.put(SQUAT_OPEN_ARM_TWIST_POSE, "SQUAT_OPEN_ARM_TWIST_POSE");
        stringMap.put(SQUATS_WITH_BALL, "SQUATS_WITH_BALL");
        stringMap.put(STAND_AND_HANG, "STAND_AND_HANG");
        stringMap.put(STANDING_SIDE_STRETCH, "STANDING_SIDE_STRETCH");
        stringMap.put(STANDING_SINGLE_LEG_FORWARD_BEND_WITH_IT_BAND_OPENER, "STANDING_SINGLE_LEG_FORWARD_BEND_WITH_IT_BAND_OPENER");
        stringMap.put(STRAIGHT_LEG_CRUNCH_WITH_LEG_LIFT, "STRAIGHT_LEG_CRUNCH_WITH_LEG_LIFT");
        stringMap.put(STRAIGHT_LEG_CRUNCH_WITH_LEG_LIFT_WITH_BALL, "STRAIGHT_LEG_CRUNCH_WITH_LEG_LIFT_WITH_BALL");
        stringMap.put(STRAIGHT_LEG_CRUNCH_WITH_LEGS_CROSSED, "STRAIGHT_LEG_CRUNCH_WITH_LEGS_CROSSED");
        stringMap.put(STRAIGHT_LEG_CRUNCH_WITH_LEGS_CROSSED_WITH_BALL, "STRAIGHT_LEG_CRUNCH_WITH_LEGS_CROSSED_WITH_BALL");
        stringMap.put(STRAIGHT_LEG_DIAGONAL_CRUNCH, "STRAIGHT_LEG_DIAGONAL_CRUNCH");
        stringMap.put(STRAIGHT_LEG_DIAGONAL_CRUNCH_WITH_BALL, "STRAIGHT_LEG_DIAGONAL_CRUNCH_WITH_BALL");
        stringMap.put(TAILBONE_CURL, "TAILBONE_CURL");
        stringMap.put(THROAT_LOCK, "THROAT_LOCK");
        stringMap.put(TICK_TOCK_SIDE_ROLL, "TICK_TOCK_SIDE_ROLL");
        stringMap.put(TWIST, "TWIST");
        stringMap.put(V_LEG_CRUNCHES, "V_LEG_CRUNCHES");
        stringMap.put(V_SIT, "V_SIT");
        stringMap.put(FORWARD_FOLD_WHEELCHAIR, "FORWARD_FOLD_WHEELCHAIR");
        stringMap.put(FORWARD_FOLD_PLUS_WHEELCHAIR, "FORWARD_FOLD_PLUS_WHEELCHAIR");
        stringMap.put(ARM_CIRCLES_LOW_FORWARD_WHEELCHAIR, "ARM_CIRCLES_LOW_FORWARD_WHEELCHAIR");
        stringMap.put(ARM_CIRCLES_MID_FORWARD_WHEELCHAIR, "ARM_CIRCLES_MID_FORWARD_WHEELCHAIR");
        stringMap.put(ARM_CIRCLES_HIGH_FORWARD_WHEELCHAIR, "ARM_CIRCLES_HIGH_FORWARD_WHEELCHAIR");
        stringMap.put(ARM_CIRCLES_LOW_BACKWARD_WHEELCHAIR, "ARM_CIRCLES_LOW_BACKWARD_WHEELCHAIR");
        stringMap.put(ARM_CIRCLES_MID_BACKWARD_WHEELCHAIR, "ARM_CIRCLES_MID_BACKWARD_WHEELCHAIR");
        stringMap.put(ARM_CIRCLES_HIGH_BACKWARD_WHEELCHAIR, "ARM_CIRCLES_HIGH_BACKWARD_WHEELCHAIR");
        stringMap.put(CORE_TWISTS_WHEELCHAIR, "CORE_TWISTS_WHEELCHAIR");
        stringMap.put(ARM_RAISE_WHEELCHAIR, "ARM_RAISE_WHEELCHAIR");
        stringMap.put(CHEST_EXPAND_WHEELCHAIR, "CHEST_EXPAND_WHEELCHAIR");
        stringMap.put(ARM_EXTEND_WHEELCHAIR, "ARM_EXTEND_WHEELCHAIR");
        stringMap.put(FORWARD_BEND_WHEELCHAIR, "FORWARD_BEND_WHEELCHAIR");
        stringMap.put(TOE_TOUCH_WHEELCHAIR, "TOE_TOUCH_WHEELCHAIR");
        stringMap.put(EXTENDED_TOE_TOUCH_WHEELCHAIR, "EXTENDED_TOE_TOUCH_WHEELCHAIR");
        stringMap.put(SEATED_ARM_CIRCLES, "SEATED_ARM_CIRCLES");
        stringMap.put(TRUNK_ROTATIONS, "TRUNK_ROTATIONS");
        stringMap.put(SEATED_TRUNK_ROTATIONS, "SEATED_TRUNK_ROTATIONS");
        stringMap.put(TOE_TOUCH, "TOE_TOUCH");
    }


    /**
     * Retrieves the String Representation of the Value
     * @param value The enum constant
     * @return The name of this enum contsant
     */
    public static String getStringFromValue( Integer value ) {
        if( stringMap.containsKey( value ) ) {
            return stringMap.get( value );
        }

        return "";
    }

    /**
     * Returns the enum constant with the specified name.
     * @param value The enum string value
     * @return The enum constant or INVALID if unknown
     */
    public static Integer getValueFromString( String value ) {
        for( Map.Entry<Integer, String> entry : stringMap.entrySet() ) {
            if( entry.getValue().equals( value ) ) {
                return entry.getKey();
            }
        }

        return INVALID;
    }

}
